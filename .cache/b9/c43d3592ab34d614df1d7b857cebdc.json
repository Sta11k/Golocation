{"id":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","dependencies":[{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\package.json","includedInParent":true,"mtime":1632222244289},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\.browserslistrc","includedInParent":true,"mtime":1631415276000},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\geoip2-node\\dist\\package.json","includedInParent":true,"mtime":1629230096000},{"name":"camelcase-keys","loc":{"line":3,"column":30},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\geoip2-node\\dist\\src\\models\\Country.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\camelcase-keys\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst camelcaseKeys = require(\"camelcase-keys\");\nclass Country {\n    constructor(response) {\n        const camelcaseResponse = camelcaseKeys(response, {\n            deep: true,\n            exclude: [/\\-/],\n        });\n        this.continent = camelcaseResponse.continent || undefined;\n        this.country = camelcaseResponse.country || undefined;\n        this.maxmind = camelcaseResponse.maxmind || undefined;\n        this.registeredCountry =\n            this.setBooleanRegisteredCountry(camelcaseResponse.registeredCountry) ||\n                undefined;\n        this.representedCountry = camelcaseResponse.representedCountry || undefined;\n        this.traits = this.setBooleanTraits(camelcaseResponse.traits || {});\n    }\n    setBooleanTraits(traits) {\n        const booleanTraits = [\n            'isAnonymous',\n            'isAnonymousProxy',\n            'isAnonymousVpn',\n            'isHostingProvider',\n            'isLegitimateProxy',\n            'isPublicProxy',\n            'isResidentialProxy',\n            'isSatelliteProvider',\n            'isTorExitNode',\n        ];\n        booleanTraits.forEach((trait) => {\n            traits[trait] = !!traits[trait];\n        });\n        return traits;\n    }\n    setBooleanRegisteredCountry(country) {\n        if (country) {\n            country.isInEuropeanUnion = !!country.isInEuropeanUnion;\n        }\n        return country;\n    }\n}\nexports.default = Country;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}}],"sources":{"../node_modules/@maxmind/geoip2-node/dist/src/models/Country.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst camelcaseKeys = require(\"camelcase-keys\");\nclass Country {\n    constructor(response) {\n        const camelcaseResponse = camelcaseKeys(response, {\n            deep: true,\n            exclude: [/\\-/],\n        });\n        this.continent = camelcaseResponse.continent || undefined;\n        this.country = camelcaseResponse.country || undefined;\n        this.maxmind = camelcaseResponse.maxmind || undefined;\n        this.registeredCountry =\n            this.setBooleanRegisteredCountry(camelcaseResponse.registeredCountry) ||\n                undefined;\n        this.representedCountry = camelcaseResponse.representedCountry || undefined;\n        this.traits = this.setBooleanTraits(camelcaseResponse.traits || {});\n    }\n    setBooleanTraits(traits) {\n        const booleanTraits = [\n            'isAnonymous',\n            'isAnonymousProxy',\n            'isAnonymousVpn',\n            'isHostingProvider',\n            'isLegitimateProxy',\n            'isPublicProxy',\n            'isResidentialProxy',\n            'isSatelliteProvider',\n            'isTorExitNode',\n        ];\n        booleanTraits.forEach((trait) => {\n            traits[trait] = !!traits[trait];\n        });\n        return traits;\n    }\n    setBooleanRegisteredCountry(country) {\n        if (country) {\n            country.isInEuropeanUnion = !!country.isInEuropeanUnion;\n        }\n        return country;\n    }\n}\nexports.default = Country;\n"},"lineCount":44}},"error":null,"hash":"9b640509d7b677d12a4ff4d8ac847dc0","cacheData":{"env":{}}}