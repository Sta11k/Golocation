{"id":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","dependencies":[{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\package.json","includedInParent":true,"mtime":1632222244289},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\.browserslistrc","includedInParent":true,"mtime":1631415276000},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\package.json","includedInParent":true,"mtime":1630423452000},{"name":"https","loc":{"line":22,"column":35},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\webServiceClient.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\https-browserify\\index.js"},{"name":"../package.json","loc":{"line":23,"column":31},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\webServiceClient.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\package.json"},{"name":"./response/models","loc":{"line":24,"column":36},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\webServiceClient.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\response\\models\\index.js"},{"name":"buffer","parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\webServiceClient.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst https = __importStar(require(\"https\"));\nconst package_json_1 = require(\"../package.json\");\nconst models = __importStar(require(\"./response/models\"));\nclass WebServiceClient {\n    constructor(accountID, licenseKey, timeout = 3000) {\n        this.accountID = accountID;\n        this.licenseKey = licenseKey;\n        this.timeout = timeout;\n        this.host = 'minfraud.maxmind.com';\n    }\n    factors(transaction) {\n        return this.responseFor('factors', transaction.toString(), models.Factors);\n    }\n    insights(transaction) {\n        return this.responseFor('insights', transaction.toString(), models.Insights);\n    }\n    score(transaction) {\n        return this.responseFor('score', transaction.toString(), models.Score);\n    }\n    reportTransaction(report) {\n        return this.responseFor('transactions/report', report.toString());\n    }\n    responseFor(path, postData, modelClass) {\n        const parsedPath = `/minfraud/v2.0/${path}`;\n        const url = `https://${this.host}${parsedPath}`;\n        const options = {\n            auth: `${this.accountID}:${this.licenseKey}`,\n            headers: {\n                Accept: 'application/json',\n                'Content-Length': Buffer.byteLength(postData),\n                'Content-Type': 'application/json',\n                'User-Agent': `minfraud-api-node/${package_json_1.version}`,\n            },\n            host: this.host,\n            method: 'POST',\n            path: parsedPath,\n            timeout: this.timeout,\n        };\n        return new Promise((resolve, reject) => {\n            const req = https.request(options, (response) => {\n                let data = '';\n                response.on('data', (chunk) => {\n                    data += chunk;\n                });\n                response.on('end', () => {\n                    if (response.statusCode && response.statusCode === 204) {\n                        return resolve();\n                    }\n                    try {\n                        data = JSON.parse(data);\n                    }\n                    catch (_a) {\n                        return reject(this.handleError({}, response, url));\n                    }\n                    if (response.statusCode && response.statusCode !== 200) {\n                        return reject(this.handleError(data, response, url));\n                    }\n                    return resolve(new modelClass(data));\n                });\n            });\n            req.on('error', (err) => {\n                return reject({\n                    code: err.code,\n                    error: err.message,\n                    url,\n                });\n            });\n            req.write(postData);\n            req.end();\n        });\n    }\n    handleError(data, response, url) {\n        if (response.statusCode &&\n            response.statusCode >= 500 &&\n            response.statusCode < 600) {\n            return {\n                code: 'SERVER_ERROR',\n                error: `Received a server error with HTTP status code: ${response.statusCode}`,\n                url,\n            };\n        }\n        if (response.statusCode &&\n            (response.statusCode < 400 || response.statusCode >= 600)) {\n            return {\n                code: 'HTTP_STATUS_CODE_ERROR',\n                error: `Received an unexpected HTTP status code: ${response.statusCode}`,\n                url,\n            };\n        }\n        if (!data.code || !data.error) {\n            return {\n                code: 'INVALID_RESPONSE_BODY',\n                error: 'Received an invalid or unparseable response body',\n                url,\n            };\n        }\n        return Object.assign(Object.assign({}, data), { url });\n    }\n}\nexports.default = WebServiceClient;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}}],"sources":{"../node_modules/@maxmind/minfraud-api-node/dist/src/webServiceClient.js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst https = __importStar(require(\"https\"));\nconst package_json_1 = require(\"../package.json\");\nconst models = __importStar(require(\"./response/models\"));\nclass WebServiceClient {\n    constructor(accountID, licenseKey, timeout = 3000) {\n        this.accountID = accountID;\n        this.licenseKey = licenseKey;\n        this.timeout = timeout;\n        this.host = 'minfraud.maxmind.com';\n    }\n    factors(transaction) {\n        return this.responseFor('factors', transaction.toString(), models.Factors);\n    }\n    insights(transaction) {\n        return this.responseFor('insights', transaction.toString(), models.Insights);\n    }\n    score(transaction) {\n        return this.responseFor('score', transaction.toString(), models.Score);\n    }\n    reportTransaction(report) {\n        return this.responseFor('transactions/report', report.toString());\n    }\n    responseFor(path, postData, modelClass) {\n        const parsedPath = `/minfraud/v2.0/${path}`;\n        const url = `https://${this.host}${parsedPath}`;\n        const options = {\n            auth: `${this.accountID}:${this.licenseKey}`,\n            headers: {\n                Accept: 'application/json',\n                'Content-Length': Buffer.byteLength(postData),\n                'Content-Type': 'application/json',\n                'User-Agent': `minfraud-api-node/${package_json_1.version}`,\n            },\n            host: this.host,\n            method: 'POST',\n            path: parsedPath,\n            timeout: this.timeout,\n        };\n        return new Promise((resolve, reject) => {\n            const req = https.request(options, (response) => {\n                let data = '';\n                response.on('data', (chunk) => {\n                    data += chunk;\n                });\n                response.on('end', () => {\n                    if (response.statusCode && response.statusCode === 204) {\n                        return resolve();\n                    }\n                    try {\n                        data = JSON.parse(data);\n                    }\n                    catch (_a) {\n                        return reject(this.handleError({}, response, url));\n                    }\n                    if (response.statusCode && response.statusCode !== 200) {\n                        return reject(this.handleError(data, response, url));\n                    }\n                    return resolve(new modelClass(data));\n                });\n            });\n            req.on('error', (err) => {\n                return reject({\n                    code: err.code,\n                    error: err.message,\n                    url,\n                });\n            });\n            req.write(postData);\n            req.end();\n        });\n    }\n    handleError(data, response, url) {\n        if (response.statusCode &&\n            response.statusCode >= 500 &&\n            response.statusCode < 600) {\n            return {\n                code: 'SERVER_ERROR',\n                error: `Received a server error with HTTP status code: ${response.statusCode}`,\n                url,\n            };\n        }\n        if (response.statusCode &&\n            (response.statusCode < 400 || response.statusCode >= 600)) {\n            return {\n                code: 'HTTP_STATUS_CODE_ERROR',\n                error: `Received an unexpected HTTP status code: ${response.statusCode}`,\n                url,\n            };\n        }\n        if (!data.code || !data.error) {\n            return {\n                code: 'INVALID_RESPONSE_BODY',\n                error: 'Received an invalid or unparseable response body',\n                url,\n            };\n        }\n        return Object.assign(Object.assign({}, data), { url });\n    }\n}\nexports.default = WebServiceClient;\n"},"lineCount":123}},"error":null,"hash":"99458e77eca2188dfd6e6f7efc9b0ede","cacheData":{"env":{}}}