{"id":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","dependencies":[{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\package.json","includedInParent":true,"mtime":1632222244289},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\.browserslistrc","includedInParent":true,"mtime":1631415276000},{"name":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\package.json","includedInParent":true,"mtime":1630423452000},{"name":"@maxmind/geoip2-node","loc":{"line":6,"column":30},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\response\\models\\insights.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\geoip2-node\\dist\\src\\index.js"},{"name":"../../utils","loc":{"line":7,"column":24},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\response\\models\\insights.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\utils.js"},{"name":"./score","loc":{"line":8,"column":40},"parent":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\response\\models\\insights.js","resolved":"C:\\Users\\ClearSKY\\Documents\\GitHub\\goit-markup-hw-02\\Golocation\\node_modules\\@maxmind\\minfraud-api-node\\dist\\src\\response\\models\\score.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst geoip2_node_1 = require(\"@maxmind/geoip2-node\");\nconst utils_1 = require(\"../../utils\");\nconst score_1 = __importDefault(require(\"./score\"));\nclass Insights extends score_1.default {\n    constructor(response) {\n        super(response);\n        this.billingAddress = this.maybeGet(response, 'billing_address');\n        this.creditCard = this.maybeGet(response, 'credit_card');\n        this.device = this.maybeGet(response, 'device');\n        this.email = this.maybeGet(response, 'email');\n        this.ipAddress = this.getIpAddress(response);\n        this.shippingAddress = this.maybeGet(response, 'shipping_address');\n    }\n    maybeGet(response, prop) {\n        return response[prop]\n            ? utils_1.camelizeResponse(response[prop])\n            : undefined;\n    }\n    getIpAddress(response) {\n        if (!response.ip_address) {\n            return undefined;\n        }\n        const insights = new geoip2_node_1.Insights(response.ip_address);\n        if (insights.country && response.ip_address.country) {\n            insights.country.isHighRisk = response.ip_address.country.is_high_risk;\n        }\n        if (insights.location && response.ip_address.location) {\n            insights.location.localTime = response.ip_address.location.local_time;\n        }\n        insights.risk = response.ip_address.risk;\n        insights.riskReasons = response.ip_address\n            .risk_reasons;\n        delete insights.maxmind;\n        return insights;\n    }\n}\nexports.default = Insights;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"../node_modules/@maxmind/minfraud-api-node/dist/src/response/models/insights.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst geoip2_node_1 = require(\"@maxmind/geoip2-node\");\nconst utils_1 = require(\"../../utils\");\nconst score_1 = __importDefault(require(\"./score\"));\nclass Insights extends score_1.default {\n    constructor(response) {\n        super(response);\n        this.billingAddress = this.maybeGet(response, 'billing_address');\n        this.creditCard = this.maybeGet(response, 'credit_card');\n        this.device = this.maybeGet(response, 'device');\n        this.email = this.maybeGet(response, 'email');\n        this.ipAddress = this.getIpAddress(response);\n        this.shippingAddress = this.maybeGet(response, 'shipping_address');\n    }\n    maybeGet(response, prop) {\n        return response[prop]\n            ? utils_1.camelizeResponse(response[prop])\n            : undefined;\n    }\n    getIpAddress(response) {\n        if (!response.ip_address) {\n            return undefined;\n        }\n        const insights = new geoip2_node_1.Insights(response.ip_address);\n        if (insights.country && response.ip_address.country) {\n            insights.country.isHighRisk = response.ip_address.country.is_high_risk;\n        }\n        if (insights.location && response.ip_address.location) {\n            insights.location.localTime = response.ip_address.location.local_time;\n        }\n        insights.risk = response.ip_address.risk;\n        insights.riskReasons = response.ip_address\n            .risk_reasons;\n        delete insights.maxmind;\n        return insights;\n    }\n}\nexports.default = Insights;\n"},"lineCount":43}},"error":null,"hash":"323a3264990d1ff794679a547613194c","cacheData":{"env":{}}}